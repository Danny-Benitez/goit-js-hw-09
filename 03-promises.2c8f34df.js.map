{"mappings":"YAAA,IAAMA,EAAOC,SAASC,cAAc,SACrBD,SAASC,cAAc,UAEtCF,EAAKG,iBAAiB,UAAU,SAAUC,GACxCA,EAAMC,iBAEN,IAAMC,EAAaC,SAASP,EAAKQ,SAASC,MAAMC,OAC1CC,EAAYJ,SAASP,EAAKQ,SAASI,KAAKF,OACxCG,EAASN,SAASP,EAAKQ,SAASK,OAAOH,OAE7C,SAASI,EAAcC,EAAUN,GAC/B,IAAMO,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEL,WAAUN,UAEpBY,EAAO,CAAEN,WAAUN,S,GAEpBA,E,IAIP,IAAK,IAAIc,EAAI,EAAGA,EAAIV,EAAQU,IAAK,CAI/BT,EAHiBS,EAAI,EACAjB,EAAaiB,EAAIZ,GAGnCa,MAAK,SAAAC,G,IAAGV,EAAQU,EAARV,SAAUN,EAAKgB,EAALhB,MACjBiB,QAAQC,IAAI,uBAAwCC,OAAfb,EAAS,QAAYa,OAANnB,EAAM,OACxD,IAAIoB,EAAiB,uBAAwCD,OAAfb,EAAS,QAAYa,OAANnB,EAAM,MAC/DqB,EAAM7B,SAAS8B,cAAc,OACnCD,EAAIE,YAAcH,EAClBC,EAAIG,MAAMC,MAAQ,QAClBlC,EAAKmC,YAAYL,E,IAElBM,OAAM,SAAAX,G,IAAGV,EAAQU,EAARV,SAAUN,EAAKgB,EAALhB,MAClBiB,QAAQC,IAAI,sBAAuCC,OAAfb,EAAS,QAAYa,OAANnB,EAAM,OACvD,IAAI4B,EAAe,sBAAqCT,OAAfb,EAAS,QAAYa,OAANnB,EAAM,MAC1DqB,EAAM7B,SAAS8B,cAAc,OACnCD,EAAIE,YAAcK,EAClBP,EAAIG,MAAMC,MAAQ,MAClBlC,EAAKmC,YAAYL,E","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('.form');\nconst button = document.querySelector('button');\n\nform.addEventListener('submit', function (event) {\n  event.preventDefault();\n\n  const firstDelay = parseInt(form.elements.delay.value);\n  const stepDelay = parseInt(form.elements.step.value);\n  const amount = parseInt(form.elements.amount.value);\n\n  function createPromise(position, delay) {\n    const shouldResolve = Math.random() > 0.3;\n\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve({ position, delay });\n        } else {\n          reject({ position, delay });\n        }\n      }, delay);\n    });\n  }\n\n  for (let i = 0; i < amount; i++) {\n    const position = i + 1;\n    const currentDelay = firstDelay + i * stepDelay;\n\n    createPromise(position, currentDelay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        const successMessage = `✅ Fulfilled promise ${position} in ${delay}ms`;\n        const div = document.createElement('div');\n        div.textContent = successMessage;\n        div.style.color = 'green';\n        form.appendChild(div);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        const errorMessage = `❌ Rejected promise ${position} in ${delay}ms`;\n        const div = document.createElement('div');\n        div.textContent = errorMessage;\n        div.style.color = 'red';\n        form.appendChild(div);\n      });\n  }\n});\n"],"names":["$ce04d3a99e08e73b$var$form","document","querySelector","addEventListener","event","preventDefault","firstDelay","parseInt","elements","delay","value","stepDelay","step","amount","createPromise","position","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","i","then","param","console","log","concat","successMessage","div","createElement","textContent","style","color","appendChild","catch","errorMessage"],"version":3,"file":"03-promises.2c8f34df.js.map"}